{"version":3,"sources":["components/sidebar/title.js","components/sidebar/contact.js","components/sidebar/personaldets.js","components/main/profile.js","components/main/work.js","components/main/education.js","components/main/main.js","App.js","index.js"],"names":["Wrapper","styled","div","SmallWrapper","ImageWrapper","UserImg","FontAwesomeIcon","EditBtn","Name","h2","Ocupation","h3","Form","form","Button","button","Title","props","state","name","getStorage","profession","editName","toggleEditName","bind","handleNameChange","handleProfessionChange","prevState","prevProps","this","setStorage","key","value","localStorage","setItem","JSON","stringify","parse","getItem","e","preventDefault","setState","target","trim","icon","faUserCircle","className","onSubmit","handleSubmit","maxLength","defaultValue","onChange","faEdit","onClick","Component","Widget","List","ul","EditButton","MiniWrapper","Contact","email","phone","github","contactEdit","sumbitContactForm","toggleContactEdit","newValue","changeEmail","type","changePhone","changeGithub","faAt","faPhone","faGithub","Container","Sidebar","Text","p","TextArea","textarea","Profile","profileText","profileEditToggle","handleProfileEditToggle","handleProfileSubmitForm","handleProfileChange","Job","JobPosition","h4","Company","h5","DateContainer","WorkExperience","jobPosition","jobCompany","jobDateStart","jobDateEnd","jobText","jobEditToggle","handleJobEditToggle","handleJobSubmitForm","text","placeholder","handleJobPositionChange","handleJobCompanyChange","handleJobDateStartChange","handleJobDateEndChange","handleJobTextChange","Education","location","dateStart","dateEnd","title","educationEdit","sumbitEducationForm","toggleEducationEdit","changeLocation","changeDateStart","changeDateEnd","changeTitle","Main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59221dc6.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport {faUserCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Wrapper = styled.div\r\n`display: flex;\r\n flex-direction: column;\r\n padding-left: .2em;\r\n margin: 0 auto;\r\n\r\n`;\r\nconst SmallWrapper = styled.div\r\n`display: flex;\r\n flex-direction:row;\r\n`;\r\nconst ImageWrapper = styled.div\r\n`\r\n    border:1px solid black;\r\n    border-radius: 80px;\r\n    margin-top: 3em;\r\n    margin-left: 3em;\r\n    margin-bottom:2em;\r\n    width: 150px;\r\n    height: 150px;\r\n`;\r\nconst UserImg = styled(FontAwesomeIcon)\r\n\r\n    `position:absolute;\r\n    margin-top:4em;\r\n    margin-left: 4em;\r\n         \r\n    `;\r\n\r\nconst EditBtn = styled(FontAwesomeIcon)\r\n     `cursor:pointer;\r\n     position:absolute;\r\n     float: right;\r\n     margin-left: 15.8em;\r\n     transition: transform .2s;\r\n     &:hover{\r\n        transform: scale(0.8);\r\n     }\r\n     `;\r\n\r\nconst Name = styled.h2\r\n    `padding-left: 3px;\r\n    font-size:36px;\r\n    `;\r\n\r\nconst Ocupation = styled.h3\r\n    `\r\n     font-weight: light;\r\n     text-align:center;\r\n     font-size:26px;\r\n    `;\r\n\r\nconst Form = styled.form \r\n     `  border: 1px solid black;\r\n        background-color:grey;\r\n        padding: 5px;\r\n        position: absolute;\r\n        margin-top:8em;\r\n        left: 70%;\r\n        transform: translate(-50%, -50%);\r\n        z-index:1;\r\n        @media (min-width: 600px) {\r\n            top: 25vh;\r\n        }\r\n        @media (max-width: 320px) {\r\n            top: 50vh;\r\n        }\r\n        text-align: center;\r\n    `;\r\n    \r\n\r\n\r\nconst Button = styled.button\r\n    `background-color: darkgray;\r\n     border:1px solid black;\r\n     padding:.2em;\r\n     width: 80px;\r\n     text-align: center;\r\n     &:hover{\r\n         background-color: grey;\r\n         \r\n         }\r\n       \r\n    `;\r\n\r\n    class Title extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                name: this.getStorage('title_name') || '',\r\n                profession: this.getStorage('title_profession') || '',\r\n                editName: false\r\n            }\r\n            this.toggleEditName = this.toggleEditName.bind(this);\r\n            this.handleNameChange = this.handleNameChange.bind(this);\r\n            this.handleProfessionChange = this.handleProfessionChange.bind(this);\r\n        }\r\n    \r\n        componentDidUpdate(prevState, prevProps) {\r\n            if (this.state.name !== prevState.name) {\r\n                this.setStorage('title_name', this.state.name)\r\n            }\r\n            if (this.state.profession !== prevState.profession) {\r\n                this.setStorage('title_profession', this.state.profession)\r\n            }\r\n        }\r\n    \r\n        setStorage(key,value){\r\n            localStorage.setItem(key,JSON.stringify(value));\r\n        }\r\n    \r\n        getStorage(key) {\r\n            return JSON.parse(localStorage.getItem(key))\r\n        }\r\n    \r\n        handleSubmit(e) {\r\n            e.preventDefault();\r\n            this.toggleEditName();\r\n        }\r\n    \r\n        toggleEditName() {\r\n            this.setState(prevState => ({\r\n                editName: !prevState.editName\r\n            }));\r\n        }\r\n    \r\n        handleNameChange(e) {\r\n            this.setState( {name: e.target.value.trim()} )\r\n        }\r\n    \r\n        handleProfessionChange(e) {\r\n            this.setState( {profession: e.target.value.trim()} )\r\n        }\r\n    \r\n        render(){\r\n            const {name, profession, editName} = this.state;\r\n    \r\n            return(\r\n            \r\n                    <Wrapper>\r\n                        <ImageWrapper>\r\n                            <UserImg icon= {faUserCircle}/>\r\n                        </ImageWrapper>\r\n                        {editName &&\r\n                            <Form className=\"d-flex flex-column\" onSubmit={ (e) => this.handleSubmit(e) }>\r\n                                \r\n                                <label className=\"\">Name</label>\r\n                                <input\r\n                                    maxLength=\"25\"\r\n                                    defaultValue= {name}\r\n                                    onChange={ (e) => this.handleNameChange(e) }\r\n                                ></input>\r\n                                <label>Profession</label>\r\n                                <input\r\n                                    maxLength=\"20\"\r\n                                    defaultValue= {profession}\r\n                                    onChange={(e) => this.handleProfessionChange(e) }\r\n                                ></input>\r\n                                <Button className=\"mt-2 ml-5 rounded\">Edit</Button>\r\n                               \r\n                            </Form> \r\n                        }\r\n                        <SmallWrapper>\r\n                        <Name>{name ? name : 'Your name'}</Name>\r\n                        <EditBtn                            \r\n                            icon={faEdit}\r\n                            onClick={this.toggleEditName}\r\n                        />\r\n                        </SmallWrapper>\r\n                        <Ocupation>{profession ? profession : 'Your profession'}</Ocupation>\r\n                    </Wrapper>\r\n                    \r\n                \r\n            )\r\n        }\r\n    \r\n    }\r\n    \r\n    export default Title;","import React, { Component } from 'react';\r\nimport  styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Widget = styled.div \r\n   `\r\n        display:flex;\r\n        flex-direction:column;\r\n        margin-top: 2em;\r\n        width:95%;\r\n       \r\n    `;\r\n\r\n\r\nconst Form = styled.form \r\n     `  background-color:grey;\r\n        border: 1px solid black;\r\n        padding: 5px;\r\n        position: absolute;\r\n        margin-top: 36vh;\r\n        left:37%;\r\n        z-index:1;\r\n        text-align: center;\r\n        @media (min-width: 600px) {\r\n            top: 25vh;\r\n        }\r\n        @media (max-width: 320px) {\r\n            top: 50vh;\r\n        }\r\n    `;\r\n\r\nconst List = styled.ul  \r\n    `   margin-left:-1.8em;\r\n        flex: 1;\r\n        display:flex;\r\n        justify-content: space-between;\r\n        flex-direction:column;\r\n        margin-bottom:10px;\r\n    `;\r\n\r\nconst EditButton = styled(FontAwesomeIcon) \r\n\r\n    `cursor:pointer;\r\n     margin-right: 2px;\r\n     position:absolute;\r\n     float: right;\r\n     margin-left: 15.8em;\r\n     transition: transform .2s;\r\n     &:hover{\r\n        transform: scale(0.8);\r\n    \r\n     }\r\n    `;\r\n\r\n\r\nconst MiniWrapper = styled.div\r\n    `display: flex;\r\n     flex-direction:row;\r\n     margin-top: 20px;\r\n    `;\r\n\r\nconst Button = styled.button\r\n\r\n `  background-color: darkgray;\r\n    border:1px solid black;\r\n    padding:.2em;\r\n    width: 80px;\r\n    text-align: center;\r\n    &:hover{\r\n        background-color:gray;\r\n        \r\n        } \r\n`;\r\n\r\nconst Title = styled.h3 \r\n`\r\npadding-left: 5px\r\n`;\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email:  this.getStorage('contact_email') || '',\r\n            phone:  this.getStorage('contact_phone') || '',\r\n            github: this.getStorage('contact_github') || '',\r\n            contactEdit: false,\r\n        }\r\n\r\n        this.sumbitContactForm = this.sumbitContactForm.bind(this);\r\n        this.toggleContactEdit = this.toggleContactEdit.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if(this.state.email !== prevState.email) {\r\n            this.setStorage('contact_email', this.state.email)\r\n        }\r\n\r\n        if(this.state.phone !== prevState.phone) {\r\n            this.setStorage('contact_phone', this.state.phone)\r\n        }\r\n\r\n        if(this.state.github !== prevState.github) {\r\n            this.setStorage('contact_github', this.state.github)\r\n        }\r\n    }\r\n\r\n    setStorage(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n\r\n    getStorage(key) {\r\n        return JSON.parse(localStorage.getItem(key))\r\n    }\r\n\r\n    toggleContactEdit() {\r\n        this.setState( prevState => (\r\n            { contactEdit: !prevState.contactEdit }\r\n        ))\r\n    }\r\n\r\n    sumbitContactForm(e) {\r\n        e.preventDefault();\r\n        this.toggleContactEdit();\r\n    }\r\n\r\n    changeEmail(e) {\r\n        const newValue = e.target.value;\r\n        this.setState( { email: newValue })\r\n    }\r\n\r\n    changePhone(e) {\r\n        const newValue = e.target.value;\r\n        this.setState( { phone: newValue } )\r\n    }\r\n\r\n    changeGithub(e) {\r\n        const newValue = e.target.value;\r\n        this.setState( { github: newValue } )\r\n    }\r\n\r\n    render() {\r\n        const { contactEdit, email, phone, github} = this.state\r\n\r\n        return(\r\n            <Widget>\r\n            <MiniWrapper>\r\n                <Title>CONTACT</Title>\r\n                <EditButton \r\n                        onClick={this.toggleContactEdit}\r\n                        icon={faEdit}/>\r\n            </MiniWrapper>\r\n                {contactEdit &&\r\n                    <Form  className=\"d-flex flex-column\" onSubmit={(e) => this.sumbitContactForm(e)}>\r\n                        <label>Email</label>\r\n                        <input \r\n                            maxLength='220' \r\n                            defaultValue={email} \r\n                            onChange={ (e)=>this.changeEmail(e) } \r\n                            type='email'\r\n                        ></input>\r\n                        <label>Phone</label>\r\n                        <input \r\n                            maxLength='15' \r\n                            defaultValue={phone} \r\n                            onChange={ (e)=>this.changePhone(e) }    \r\n                        ></input>\r\n                        <label>Github Page</label>\r\n                        <input \r\n                            maxLength='225' \r\n                            defaultValue={github} \r\n                            onChange={ (e)=>this.changeGithub(e) }\r\n                        ></input>\r\n\r\n                        <Button className=\"mt-2 ml-5 rounded\">Edit</Button>\r\n                    </Form>\r\n                }\r\n                    \r\n                <List>\r\n                    <div>\r\n                        <FontAwesomeIcon  icon={faAt} className=\"mt-3\"/>\r\n                        <span className=\" ml-1 mb-3\">{email ? email : 'Enter your email'}</span>\r\n                    </div>\r\n                    <div>\r\n                        <FontAwesomeIcon  icon={faPhone} className=\" mt-3\"/>\r\n                        <span className=\" ml-1 mb-3\">{phone ? phone : 'Enter your phone'} </span>\r\n                    </div>\r\n                    <div>\r\n                        <FontAwesomeIcon  icon={faGithub} className=\" mt-3\"/>\r\n                        <span className=\" ml-1 mb-3\">{github ? github : 'github.com/yourpage'}</span>\r\n                    </div>\r\n                </List>\r\n            </Widget>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","\r\nimport React, { Component } from 'react'\r\nimport styled from \"styled-components\";\r\nimport Title from './title';\r\nimport Contact from \"./contact\";\r\n\r\n\r\n\r\nconst Container = styled.div\r\n    `   min-height: 100vh;\r\n        border-right: 1px solid black;\r\n        background-color: #f7fcf9;\r\n    `;\r\n\r\nclass Sidebar extends Component {\r\n    render() {\r\n        return(\r\n            <Container className=\"col-5\">\r\n                <Title />\r\n                <Contact />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Container = styled.div \r\n     `\r\n        position:relative;\r\n        border-bottom:1px solid gray;\r\n        margin:5px;\r\n    `;    \r\n\r\n\r\nconst Text = styled.p \r\n    `WORD-BREAK: break-all;\r\n     font-weight: light;\r\n    `;\r\n    \r\nconst Title = styled.h3\r\n    ``;\r\n\r\nconst EditButton = styled(FontAwesomeIcon) \r\n    `   position:absolute;\r\n        top:0;\r\n        right:0;\r\n        &:hover{\r\n            cursor:pointer;\r\n            transform: scale(0.8);\r\n        }\r\n    `;\r\n\r\n\r\nconst Form = styled.form\r\n`   background-color:grey;\r\n    border: 1px solid black;\r\n    padding: 5px;\r\n    position: absolute;\r\n    margin-top: .2em;\r\n    left:38%;\r\n    z-index:1;\r\n    text-align: center;\r\n    @media (min-width: 600px) {\r\n        top: .7vh;\r\n    }\r\n    @media (max-width: 320px) {\r\n        top: 50vh;\r\n    }\r\n`;\r\n\r\nconst Button = styled.button \r\n`   background-color: darkgray;\r\n    border:1px solid black;\r\n    padding:.2em;\r\n    width: 80px;\r\n    text-align: center;\r\n    &:hover{\r\n    background-color:gray;\r\n    border:1px solid black;\r\n    } \r\n`;\r\n\r\n\r\n\r\nconst TextArea = styled.textarea \r\n `max-height:200px;\r\n `;\r\n\r\n\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profileText: this.getStorage('profile_text') || '',\r\n            profileEditToggle: false,\r\n        }\r\n\r\n        this.handleProfileEditToggle = this.handleProfileEditToggle.bind(this);\r\n        this.handleProfileSubmitForm = this.handleProfileSubmitForm.bind(this);\r\n        this.handleProfileChange = this.handleProfileChange.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if(this.state.profileText !== prevState.profileText) {\r\n            this.setStorage('profile_text', this.state.profileText)\r\n        }\r\n    }\r\n\r\n    setStorage(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n\r\n    getStorage(key) {\r\n        return JSON.parse(localStorage.getItem(key))\r\n    }\r\n\r\n    handleProfileChange(e) {\r\n        this.setState({\r\n            profileText: e.target.value\r\n        })\r\n    }\r\n\r\n    handleProfileSubmitForm(e) {\r\n        e.preventDefault();\r\n        this.handleProfileEditToggle();\r\n    }\r\n\r\n    handleProfileEditToggle() {\r\n        this.setState(prevState => ({\r\n            profileEditToggle: !prevState.profileEditToggle\r\n        }));\r\n    }\r\n\r\n    render(){\r\n        const {profileText, profileEditToggle} = this.state;\r\n        \r\n        return(\r\n            <Container>\r\n                <Title>PROFILE</Title>\r\n                <EditButton\r\n                    icon={faEdit}\r\n                    onClick={(e) => {this.handleProfileEditToggle(e)}}\r\n                />\r\n                <Text>{profileText ? profileText : 'Please enter info you want to share about you.'}</Text>\r\n                {profileEditToggle && \r\n                    <Form className=\"d-flex flex-column\" onSubmit={this.handleProfileSubmitForm}>\r\n                        <label>Profile Info</label>\r\n                        <TextArea\r\n                            maxLength=\"200\"\r\n                            defaultValue= {profileText}\r\n                            onChange= {(e) => this.handleProfileChange(e)}\r\n                        ></TextArea>\r\n                        <Button className=\"mt-2 ml-5 rounded\">Edit</Button>\r\n                    </Form>\r\n                }\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React,{Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Container = styled.div \r\n     `\r\n        position:relative;\r\n        margin:5px;\r\n    `;\r\n\r\nconst Job = styled.div \r\n    `   diplay: flex;\r\n        flex-direction: column;\r\n        border-bottom:1px solid gray;\r\n        margin:5px;\r\n        position: relative;\r\n    `;\r\n\r\nconst JobPosition = styled.h4\r\n    `WORD-BREAK: break-all;\r\n    `;\r\n\r\nconst Company = styled.h5\r\n    `WORD-BREAK: break-all;\r\n    `;\r\n\r\nconst DateContainer = styled.h5 \r\n    `display: flex;\r\n    `;\r\n\r\nconst EditButton = styled(FontAwesomeIcon)\r\n    `   position:absolute;\r\n        top:0;\r\n        right:0;\r\n        &:hover{\r\n            cursor:pointer;\r\n            transform: scale(0.8);\r\n        }\r\n    `;\r\n\r\nconst Form = styled.form\r\n`   background-color:grey;\r\n    border: 1px solid black;\r\n    padding: 5px;\r\n    position: absolute;    \r\n    left:38%;\r\n    z-index:1;\r\n    text-align: center;\r\n    @media (min-width: 600px) {\r\n            top: .7vh;\r\n        }\r\n    @media (max-width: 320px) {\r\n            top: 50vh;\r\n        }\r\n`;\r\nconst Button = styled.button\r\n`   background-color: darkgray;\r\n    border:1px solid black;\r\n    padding:.2em;\r\n    width: 80px;\r\n    text-align: center;\r\n    &:hover{\r\n    background-color:grey;\r\n    \r\n    } \r\n`;\r\n\r\n\r\nconst TextArea = styled.textarea \r\n `  max-height:200px;\r\n `;\r\n\r\nconst Title = styled.h3 \r\n`\r\n`;\r\n\r\nconst Text = styled.p \r\n`   WORD-BREAK: break-all;\r\n    font-weight: light;\r\n`;\r\n\r\n\r\nclass WorkExperience extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            jobPosition: this.getStorage('work_position') || '',\r\n            jobCompany: this.getStorage('work_company') || '',\r\n            jobDateStart: this.getStorage('work_date_start') || '',\r\n            jobDateEnd: this.getStorage('work_date_end') || '',\r\n            jobText: this.getStorage('work_text') || '',\r\n            jobEditToggle: false\r\n        }\r\n\r\n        this.handleJobEditToggle = this.handleJobEditToggle.bind(this);\r\n        this.handleJobSubmitForm = this.handleJobSubmitForm.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if(this.state.jobPosition !== prevState.jobPosition) {\r\n            this.setStorage('work_position', this.state.jobPosition)\r\n        }\r\n\r\n        if(this.state.jobCompany !== prevState.jobCompany) {\r\n            this.setStorage('work_company', this.state.jobCompany)\r\n        }\r\n\r\n        if(this.state.jobDateStart !== prevState.jobDateStart) {\r\n            this.setStorage('work_date_start', this.state.jobDateStart)\r\n        }\r\n\r\n        if(this.state.jobDateEnd !== prevState.jobDateEnd) {\r\n            this.setStorage('work_date_end', this.state.jobDateEnd)\r\n        }\r\n\r\n        if(this.state.jobText !== prevState.jobText) {\r\n            this.setStorage('work_text', this.state.jobText)\r\n        }\r\n    }\r\n\r\n    setStorage(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n\r\n    getStorage(key) {\r\n        return JSON.parse(localStorage.getItem(key))\r\n    }\r\n\r\n\r\n    handleJobPositionChange(e) {\r\n        const text = e.target.value\r\n        this.setState({ jobPosition: text })\r\n    }\r\n\r\n    handleJobCompanyChange(e) {\r\n        const text = e.target.value\r\n        this.setState({ jobCompany: text })\r\n    }\r\n\r\n    handleJobDateStartChange(e) {\r\n        const value = e.target.value\r\n        this.setState({ jobDateStart: value })\r\n    }\r\n\r\n    handleJobDateEndChange(e) {\r\n        const value = e.target.value\r\n        this.setState({ jobDateEnd: value })\r\n    }\r\n\r\n    handleJobTextChange(e) {\r\n        const text = e.target.value\r\n        this.setState({ jobText: text })\r\n    }\r\n\r\n    handleJobEditToggle() {\r\n        this.setState(prevState => ({\r\n            jobEditToggle: !prevState.jobEditToggle\r\n        }));\r\n    }\r\n\r\n    handleJobSubmitForm(e) {\r\n        e.preventDefault();\r\n        this.handleJobEditToggle();\r\n    }\r\n\r\n    render() {\r\n        const{ jobPosition, jobCompany, jobDateStart, jobDateEnd, jobText, jobEditToggle } = this.state\r\n\r\n        return( \r\n            <Container>\r\n                <Title>WORK EXPERIENCE</Title>\r\n                <EditButton\r\n                    icon={faEdit}\r\n                    onClick={this.handleJobEditToggle}\r\n                />\r\n                <Job>\r\n                    <JobPosition>Position: {jobPosition ? jobPosition : 'Enter your position in the job'}</JobPosition>\r\n                    <Company>Company: {jobCompany ? jobCompany : 'Name of the company you worked for'}</Company>\r\n                    <DateContainer> Date: {jobDateStart ? jobDateStart : 'date'} / \r\n                    {jobDateEnd ? jobDateEnd : 'date'} </DateContainer>\r\n                    <Text>{jobText ? jobText : 'Please enter what you want to share about that job'}</Text>\r\n\r\n                {jobEditToggle &&\r\n                    <Form  className=\"d-flex flex-column\"onSubmit={this.handleJobSubmitForm}>\r\n                        <label>Position</label>\r\n                        <input\r\n                            maxLength=\"20\"\r\n                            placeholder='Position'\r\n                            defaultValue={jobPosition}\r\n                            onChange={(e) => this.handleJobPositionChange(e)}\r\n                        ></input>\r\n                        <label>Company</label>\r\n                        <input\r\n                            maxLength=\"20\"\r\n                            placeholder='Company'\r\n                            defaultValue={jobCompany}\r\n                            onChange={(e) => this.handleJobCompanyChange(e)}\r\n                        ></input>\r\n                        <label>Date Start</label>\r\n                        <input\r\n                            type=\"month\"\r\n                            defaultValue={jobDateStart}\r\n                            onChange={(e) => this.handleJobDateStartChange(e)}\r\n                        ></input>\r\n                        <label>Date End</label>\r\n                        <input\r\n                            type=\"month\"\r\n                            defaultValue={jobDateEnd}\r\n                            onChange={(e) => this.handleJobDateEndChange(e)}\r\n                        ></input>\r\n                        <label>Duties</label>\r\n                        <TextArea\r\n                            maxLength=\"200\"\r\n                            defaultValue= {jobText}\r\n                            onChange= {(e) => this.handleJobTextChange(e)}\r\n                        >                            \r\n                        </TextArea>\r\n                        <Button className=\"mt-2 ml-5 rounded\">Edit</Button>\r\n                    </Form>\r\n                }\r\n                </Job>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkExperience;","import { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Widget = styled.div \r\n`\r\n        display:flex;\r\n        flex-direction:column;\r\n        border-bottom:1px solid gray;\r\n        width:95%;\r\n        margin: 0 auto;\r\n    `;\r\n\r\n\r\nconst Form = styled.form \r\n` background-color:grey; \r\nborder: 1px solid black;\r\npadding: 5px;\r\nposition: absolute;\r\nmargin-top: 35vh;\r\nleft:40%;\r\nz-index:1;\r\ntext-align: center;\r\n@media (min-width: 600px) {\r\n    top: 25vh;\r\n}\r\n@media (max-width: 320px) {\r\n    top: 50vh;\r\n}\r\n`;\r\n\r\nconst List = styled.ul\r\n`\r\n    flex: 1;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    flex-direction:column;\r\n    margin-bottom:10px;\r\n`;\r\n\r\nconst EditButton = styled(FontAwesomeIcon)\r\n`   position:absolute;\r\n    margin-right:1.4em;\r\n    right:0;\r\n    &:hover{\r\n        cursor:pointer;\r\n        transform: scale(0.8);\r\n    }\r\n`;\r\n\r\nconst Button = styled.button\r\n `   background-color: darkgray;\r\n border:1px solid black;\r\n    padding:.2em;\r\n    width: 80px;\r\n    text-align: center;\r\n    &:hover{\r\n        background-color:gray;\r\n        \r\n    } \r\n`;\r\n\r\nconst Title = styled.h3 \r\n`\r\n`;\r\n\r\nclass Education extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            location: this.getStorage('education_location') || '',\r\n            dateStart: this.getStorage('education_date_start') || '',\r\n            dateEnd: this.getStorage('education_date_end') || '',\r\n            title: this.getStorage('education_title') || '',\r\n            educationEdit: false,\r\n        }\r\n        this.sumbitEducationForm = this.sumbitEducationForm.bind(this);\r\n        this.toggleEducationEdit = this.toggleEducationEdit.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if(this.state.location !== prevState.location) {\r\n            this.setStorage('education_location', this.state.location)\r\n        }\r\n\r\n        if(this.state.dateStart !== prevState.dateStart) {\r\n            this.setStorage('education_date_start', this.state.dateStart)\r\n        }\r\n\r\n        if(this.state.dateEnd !== prevState.dateEnd) {\r\n            this.setStorage('education_date_end', this.state.dateEnd)\r\n        }\r\n\r\n        if(this.state.title !== prevState.title) {\r\n            this.setStorage('education_title', this.state.title)\r\n        }\r\n    }\r\n\r\n    setStorage(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n\r\n    getStorage(key) {\r\n        return JSON.parse(localStorage.getItem(key))\r\n    }\r\n\r\n    toggleEducationEdit() {\r\n        this.setState( prevState => ({\r\n            educationEdit: !prevState.educationEdit\r\n        }))\r\n    }\r\n\r\n    sumbitEducationForm(e) {\r\n        e.preventDefault();\r\n        this.toggleEducationEdit();\r\n    }\r\n\r\n    changeLocation(e){\r\n        const newValue = e.target.value;\r\n        this.setState( {location:newValue} )\r\n    }\r\n\r\n    changeDateStart(e){\r\n        const newValue = e.target.value;\r\n        this.setState( {dateStart:newValue} )\r\n    }\r\n\r\n    changeDateEnd(e){\r\n        const newValue = e.target.value;\r\n        this.setState( {dateEnd:newValue} )\r\n    }\r\n\r\n    changeTitle(e) {\r\n        const newValue = e.target.value;\r\n        this.setState( {title:newValue} )\r\n    }\r\n\r\n    render() {\r\n        const {educationEdit, location, dateStart, dateEnd, title} = this.state;\r\n\r\n        return(\r\n            <Widget>\r\n                <Title>EDUCATION</Title>\r\n                {educationEdit &&\r\n                    <Form  className=\"d-flex flex-column\" onSubmit={(e) => this.sumbitEducationForm(e)}>\r\n                        <label>School</label>\r\n                        <input \r\n                            defaultValue={location}\r\n                            maxLength='220'\r\n                            onChange={(e) => this.changeLocation(e)}\r\n                        ></input>\r\n                        <label>Date Start</label>\r\n                        <input \r\n                            defaultValue={dateStart}\r\n                            onChange={(e) => this.changeDateStart(e)}\r\n                            type='month'\r\n                            ></input>\r\n                        <label>Date End</label>\r\n                        <input\r\n                            defaultValue={dateEnd}\r\n                            onChange={(e) => this.changeDateEnd(e)}\r\n                            type='month'\r\n                        ></input>\r\n                        <label>Title</label>\r\n                        <input\r\n                            defaultValue={title}\r\n                            maxLength='220'\r\n                            onChange={(e) => this.changeTitle(e)}\r\n                        ></input>\r\n                        <Button className=\"mt-2 ml-5 rounded\">Edit</Button>\r\n                    </Form>\r\n                }\r\n                        <EditButton \r\n                            onClick={this.toggleEducationEdit}\r\n                            icon={faEdit}/>\r\n                    <List>\r\n                        <li>Studied in: {location ? location : 'Where you studied'}</li>\r\n                        <li>Date: {dateStart ? dateStart : 'date'} / {dateEnd ? dateEnd : 'date'}</li>\r\n                        <li>Title: {title ? title : ''}</li>\r\n                    </List>\r\n            </Widget>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Education;","import React,{ Component } from \"react\";\r\nimport styled from 'styled-components';\r\nimport Profile from './profile';\r\nimport WorkExperience from './work';\r\nimport Education from './education';\r\n\r\n\r\nconst Container = styled.div\r\n`   min-height: 100vh;\r\n    float:right;\r\n    background-color:#f7fcf9;\r\n    padding-top:4em;\r\n`;\r\n\r\nclass Main extends Component{\r\n    render() {\r\n        return(\r\n            <Container className=\"col-7\">\r\n                <Profile/>\r\n                <WorkExperience/>\r\n                <Education/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Sidebar from \"./components/sidebar/personaldets\";\nimport Main from \"./components/main/main\";\n\nconst Container = styled.div\n    `\n      background-color:#eee;\n      \n      max-height: 100vh;\n      @media (max-width: 640px) {\n        background-image:none;\n      }\n      margin: 1em 20em 0em 20em;\n      \n    `;\n  \n  const Wrapper = styled.div\n     `\n      min-height: 98vh;\n      max-width: 100vw;\n      box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n      @media (max-width: 640px) {\n        min-height: 100vh;\n      }\n      display:flex;\n      flex-direction: row;\n    `;    \n  \n  \n  function App() {\n    return (\n      <Container>\n        <Wrapper>\n        <Sidebar/>\n        <Main/>\n        </Wrapper>\n      </Container>\n    );\n  }\n  \n  \n  export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}